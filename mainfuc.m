%% 高斯云变换主程序

%% 文件说明：
%% GCT.m	    主界面程序
%% mainfuc.m	算法主程序
%% GMM.m		高斯混合模型算法程序
%% comp_En_He.m	从高斯分布到高斯云的生成算法程序
%% GMM_mu.m	    预先给定高斯分布期望的高斯混合模型算法程序

%% 实验任务： 根据给定的一组统计数据，生成高斯云

%% 实验方法：
%% 1. 利用高斯混合模型生成多个高斯分布
%% 2. 根据高斯分布之间的交叠程度计算高斯云的熵、超熵和概念含混度
%% 3. 去掉超出阈值、概念含混度最大的概念
%% 4. 利用带期望的高斯混合模型重新计算生成多个高斯分布
%% 5. 重复2-4直至生成所有高斯云的概念含混度都小于阈值。

%% 程序运行示例
%% >> GCT.m
%% 输入：指定概念数量a（大于1），按概念数量生成高斯云；默认概念数量（<1）,指定概念含混度阈值cd,调用自适应高斯云变换
%% 输出：多个高斯云

function mainfuc(a,cd)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 选择数据文件
 [fname,fpath] = uigetfile('*.txt'); 
 name = strcat(fpath,fname);
 if ~isequal(fname, 0)
 [x y] = textread(name,'%f%f');
 end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 计算数据分布频度和取值范围
y=y/sum(y);
x=x(:);y=y(:);
m = max(x);
mi = min(x);
s = length(x);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
k = a; %% 概念个数，可以预先指定，否则根据波峰数量去确定。
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 启发式高斯变换
[mu,v,p,prb,k] = GMM(x,y,m,mi,k);   %% 调用高斯混合模型算法程序，生成了k个高斯分布
[En,He,belta] = comp_En_He(mu,v,p); %% 根据交叠程度计算熵En、超熵He和含混度belta
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 自适应高斯变换
if a<1                                                      %% 概念个数小于1，启用自适应高斯云变换
    while (k>1)                                             %% 高斯分布个数大于1，才存在概念交叠
        [b1,index_b] = sort(belta,'descend');               %% 对每个高斯云的概念含混度指数进行排序
        delnum = index_b(1); 
        if (belta(delnum)>cd)                               %% 如果交叠最严重的两个概念的含混度超出阈值，就删除幅值小的那个      
            if p(delnum)>p(index_b(2))                      %% 不能去掉幅值即（所占比例）最大的那个，与混乱指数最大的概念重叠的肯定是混乱指数第二大的那个
                delnum = index_b(2);
            end
            mu(delnum) = [];                                %% 从期望列表中删除概念
            k = k-1;                                        %% 概念数量减1
            [mu,v,p,prb] = GMM_mu(x,y,m,mi,k,mu);           %% 调用指定期望的高斯混合模型算法，试验中感觉这样比直接用高斯混合算法要准确一些
            [En,He,belta] = comp_En_He(mu,v,p);             %% 计算生成了k个高斯云的熵、超熵和概念含混度
        else
            break;
        end
    end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 画概念
figure(1)                                                 %% 建立画图板
x1 =x;y1 = y;
clf
plot(x,y);                                                %% 画原始数据统计分布图
hold on
plot(x,sum(prb,2),'r')                                    %% 画出拟合曲线
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 画出最终生成的用云滴表示的高斯云
for i=1:k
    d = x1-mu(i);
    amp = p(i)/sqrt(2*pi*v(i)^2);
    z(:,i) = amp*exp(-0.5*(d.*d)/(En(i)^2));
    j = 1
    while j<1000
        Enn = 1/1*randn(1) *He(i) + En(i);
        x(j) = randn(1) *Enn + mu(i);
        y(j) = amp*exp(-(x(j)-mu(i))^2/(2*Enn^2));
        if ((x(j)>m)||(x(j)<mi))
            j = j-1;
        end
        j = j+1;
    end     
    plot(x,y,'g.');                                     %% 绘制高斯云
    plot(x1,z,'k--');                                   %% 绘制期望高斯曲线
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
XLabel('')
YLabel('')